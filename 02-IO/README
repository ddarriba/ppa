# MPI IO examples

Versions a, b, and c of the same example are intended to compare against each
other to learn different ways of doing the same

All examples read a 2D matrix of integers from a binary file as defined in "common.h"
By default: data/integers.input , size = 32x32.
The code will just read the 1024 (32x32) first sequential values.
You can change the size in common.h (such that HxW <= 1024).

data/integers.input contains a sequence of 2^20 integers starting at 0.
This way you can play with larger values, but you can also generate your own huge
integers file using io_gen tool.

Examples included in this folder:

*  01a_simple_write
  - Concurrent write to an output file
  - MPI_File_write

*  01b_simple_writeall
    - Concurrent write to an output file
    - MPI_File_writeall

*  02a_io_1D_old
  - 1D processes distribution using Scatter/Gather

*  02b_io_1D_mpi
  - 1D processes distribution using MPI I/O
  - MPI_File_open, MPI_File_seek, MPI_File_close
  - MPI_File_read, MPI_File_write

*  02c_io_1D_mpi_view
  - 1D processes distribution using MPI I/O and File Views
  - MPI_File_set_view

*  03a_io_2D_old
  - 2D cartesian topology distribution using Scatter/Gather
  - Derived datatypes
  - Virtual Cartesian Topology

*  03b_io_2D_mpi
  - 2D cartesian topology using MPI I/O
  - MPI_Type_create_darray

*  04_subarray
  - Similar to example 03b but using a subarray for heterogeneous distributions
  - MPI_Type_create_subarray

*  05_fileviews
  - File views for non contiguous access
  - MPI_File_set_view

Auxiliary files:

* io_gen
  - Tool for generating a (potentially huge) binary integers file
  - It can also validate the output files from the examples

* common
  - Common functions to keep example files as clean as possible
